{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","useState","startIndex","setStartIndex","handleMove","direction","lastImageIndex","length","styleImages","transitionDuration","transform","className","style","width","map","image","src","alt","substring","lastIndexOf","type","onClick","disabled","App","state","this","htmlFor","id","value","min","max","onChange","ev","setState","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQA+EeA,EAlEmB,SAAC,GAE5B,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,UAAWC,EACf,EADeA,UAAWC,EAC1B,EAD0BA,KAAMC,EAChC,EADgCA,kBAEpC,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAa,SAACC,GAClB,IAEMC,EAAiBJ,GAFS,YAAdG,EAA0BN,GAAQA,GAIhDO,GAAkBV,EAAOW,OAAST,EACpCK,EAAcP,EAAOW,OAAST,GAE9BK,EADSG,GAAkB,EACb,EAEAA,IAIZE,EAAc,CAClBC,mBAAmB,GAAD,OAAKT,EAAL,MAClBU,UAAU,eAAD,OAAiBR,EAAaL,EAA9B,QAGX,OACE,sBACEc,UAAU,WACVC,MAAO,CAAEC,MAAM,GAAD,OAAKhB,EAAYC,EAAjB,OAFhB,UAIE,oBAAIa,UAAU,iBAAd,SACGf,EAAOkB,KAAI,SAAAC,GAAK,OACf,oBAEEJ,UAAU,kBACVC,MAAOJ,EAHT,SAKE,qBACEQ,IAAKD,EACLF,MAAOhB,EACPoB,IAAKF,EACFG,UAAUH,EAAMI,YAAY,KAAO,EAAGJ,EAAMI,YAAY,SARxDJ,QAcX,wBACEK,KAAK,SACLC,QAAS,kBAAMjB,EAAW,aAC1BkB,SAAyB,IAAfpB,EAHZ,kBAQA,wBACEkB,KAAK,SACL,UAAQ,OACRC,QAAS,kBAAMjB,EAAW,YAC1BkB,SAAUpB,IAAeN,EAAOW,OAAST,EAJ3C,sBCxDAF,EAAmB,CACvB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGI2B,E,4MACJC,MAAQ,CACN3B,UAAW,IACXC,UAAW,EACXC,KAAM,EACNC,kBAAmB,K,4CAGrB,WAAU,IAAD,OACP,EAEIyB,KAAKD,MADP3B,EADF,EACEA,UAAWC,EADb,EACaA,UAAWC,EADxB,EACwBA,KAAMC,EAD9B,EAC8BA,kBAG9B,OACE,sBAAKW,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCf,EAAOW,OAA1C,aAEA,sBAAKI,UAAU,kBAAf,UACE,wBAAOe,QAAQ,SAAf,wBAGE,uBACEC,GAAG,SACHP,KAAK,SACLQ,MAAO/B,EACPgC,IAAK,IACLC,IAAK,KACLC,SAAU,SAAAC,GACR,EAAKC,SAAS,CAAEpC,WAAYmC,EAAGE,OAAON,cAK5C,wBAAOF,QAAQ,UAAf,oCAGE,uBACEC,GAAG,UACHP,KAAK,SACLQ,MAAO9B,EACP+B,IAAK,EACLC,IAAK,GACLC,SAAU,SAAAC,GACR,EAAKC,SAAS,CAAEnC,WAAYkC,EAAGE,OAAON,cAK5C,wBAAOF,QAAQ,SAAf,kBAGE,uBACEC,GAAG,SACHP,KAAK,SACLQ,MAAO7B,EACP8B,IAAK,EACLC,IAAK,GACLC,SAAU,SAAAC,GACR,EAAKC,SAAS,CAAElC,MAAOiC,EAAGE,OAAON,cAKvC,wBAAOF,QAAQ,aAAf,gCAGE,uBACEC,GAAG,aACHP,KAAK,SACLQ,MAAO5B,EACP6B,IAAK,IACLC,IAAK,IACL/B,KAAM,IACNgC,SAAU,SAAAC,GACR,EAAKC,SAAS,CAAEjC,mBAAoBgC,EAAGE,OAAON,iBAMtD,cAAC,EAAD,CACEhC,OAAQA,EACRG,KAAMA,EACND,UAAWA,EACXD,UAAWA,EACXG,kBAAmBA,W,GAtFXmC,IAAMC,WA6FTb,IClHfc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3a2cbff0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n};\n\ntype Direction = 'forward' | 'backward';\n\nconst Carousel: React.FC<Props> = ({\n  images, itemWidth, frameSize, step, animationDuration,\n}) => {\n  const [startIndex, setStartIndex] = useState(0);\n\n  const handleMove = (direction: Direction) => {\n    const stepShift = direction === 'forward' ? step : -step;\n\n    const lastImageIndex = startIndex + stepShift;\n\n    if (lastImageIndex >= images.length - frameSize) {\n      setStartIndex(images.length - frameSize);\n    } else if (lastImageIndex <= 0) {\n      setStartIndex(0);\n    } else {\n      setStartIndex(lastImageIndex);\n    }\n  };\n\n  const styleImages = {\n    transitionDuration: `${animationDuration}ms`,\n    transform: `translateX(-${startIndex * itemWidth}px)`,\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ width: `${itemWidth * frameSize}px` }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map(image => (\n          <li\n            key={image}\n            className=\"Carousel__emoji\"\n            style={styleImages}\n          >\n            <img\n              src={image}\n              width={itemWidth}\n              alt={image\n                .substring(image.lastIndexOf('/') + 1, image.lastIndexOf('.'))}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={() => handleMove('backward')}\n        disabled={startIndex === 0}\n      >\n        Prev\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"next\"\n        onClick={() => handleMove('forward')}\n        disabled={startIndex === images.length - frameSize}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n}\n\nconst images: string[] = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nclass App extends React.Component<{}, State> {\n  state = {\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      itemWidth, frameSize, step, animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"parametr-editor\">\n          <label htmlFor=\"itemId\">\n            Item width:\n\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              value={itemWidth}\n              min={130}\n              max={1300}\n              onChange={ev => {\n                this.setState({ itemWidth: +ev.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            Displayed images number\n\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={10}\n              onChange={ev => {\n                this.setState({ frameSize: +ev.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\">\n            Step:\n\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={10}\n              onChange={ev => {\n                this.setState({ step: +ev.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"durationId\">\n            Animation duration:\n\n            <input\n              id=\"durationId\"\n              type=\"number\"\n              value={animationDuration}\n              min={100}\n              max={100000}\n              step={100}\n              onChange={ev => {\n                this.setState({ animationDuration: +ev.target.value });\n              }}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}